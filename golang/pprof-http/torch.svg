<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>os.Open (431 samples, 51.43%)</title><rect x="376.1" y="197" width="606.9" height="15.0" fill="rgb(235,212,18)" rx="2" ry="2" />
<text  x="379.11" y="207.5" >os.Open</text>
</g>
<g >
<title>syscall.read (90 samples, 10.74%)</title><rect x="10.0" y="165" width="126.7" height="15.0" fill="rgb(217,199,5)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >syscall.read</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.12%)</title><rect x="1057.6" y="85" width="1.4" height="15.0" fill="rgb(211,120,6)" rx="2" ry="2" />
<text  x="1060.64" y="95.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.12%)</title><rect x="1178.7" y="261" width="1.4" height="15.0" fill="rgb(222,223,29)" rx="2" ry="2" />
<text  x="1181.74" y="271.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (4 samples, 0.48%)</title><rect x="369.1" y="165" width="5.6" height="15.0" fill="rgb(222,75,11)" rx="2" ry="2" />
<text  x="372.07" y="175.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.12%)</title><rect x="148.0" y="229" width="1.4" height="15.0" fill="rgb(214,90,9)" rx="2" ry="2" />
<text  x="151.00" y="239.5" ></text>
</g>
<g >
<title>runtime.findRunnable (3 samples, 0.36%)</title><rect x="1115.4" y="229" width="4.2" height="15.0" fill="rgb(223,95,38)" rx="2" ry="2" />
<text  x="1118.37" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="146.6" y="229" width="1.4" height="15.0" fill="rgb(244,75,42)" rx="2" ry="2" />
<text  x="149.59" y="239.5" ></text>
</g>
<g >
<title>os.newFile (1 samples, 0.12%)</title><rect x="439.5" y="149" width="1.4" height="15.0" fill="rgb(238,89,37)" rx="2" ry="2" />
<text  x="442.47" y="159.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (138 samples, 16.47%)</title><rect x="164.9" y="229" width="194.3" height="15.0" fill="rgb(209,25,46)" rx="2" ry="2" />
<text  x="167.89" y="239.5" >net/http.checkConnErrorWr..</text>
</g>
<g >
<title>syscall.syscall (45 samples, 5.37%)</title><rect x="376.1" y="117" width="63.4" height="15.0" fill="rgb(209,112,22)" rx="2" ry="2" />
<text  x="379.11" y="127.5" >syscal..</text>
</g>
<g >
<title>os.ReadFile (54 samples, 6.44%)</title><rect x="983.0" y="197" width="76.0" height="15.0" fill="rgb(250,92,23)" rx="2" ry="2" />
<text  x="986.01" y="207.5" >os.ReadF..</text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.12%)</title><rect x="1168.9" y="197" width="1.4" height="15.0" fill="rgb(229,6,44)" rx="2" ry="2" />
<text  x="1171.88" y="207.5" ></text>
</g>
<g >
<title>syscall.Read (90 samples, 10.74%)</title><rect x="10.0" y="181" width="126.7" height="15.0" fill="rgb(230,214,17)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >syscall.Read</text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.12%)</title><rect x="1122.4" y="197" width="1.4" height="15.0" fill="rgb(254,206,5)" rx="2" ry="2" />
<text  x="1125.41" y="207.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (3 samples, 0.36%)</title><rect x="1181.6" y="261" width="4.2" height="15.0" fill="rgb(234,40,35)" rx="2" ry="2" />
<text  x="1184.55" y="271.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.12%)</title><rect x="1122.4" y="181" width="1.4" height="15.0" fill="rgb(224,194,21)" rx="2" ry="2" />
<text  x="1125.41" y="191.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.12%)</title><rect x="1177.3" y="213" width="1.4" height="15.0" fill="rgb(241,225,35)" rx="2" ry="2" />
<text  x="1180.33" y="223.5" ></text>
</g>
<g >
<title>net/http.appendTime (1 samples, 0.12%)</title><rect x="156.4" y="197" width="1.5" height="15.0" fill="rgb(213,122,48)" rx="2" ry="2" />
<text  x="159.44" y="207.5" ></text>
</g>
<g >
<title>strconv.formatBits (1 samples, 0.12%)</title><rect x="157.9" y="165" width="1.4" height="15.0" fill="rgb(251,163,50)" rx="2" ry="2" />
<text  x="160.85" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (16 samples, 1.91%)</title><rect x="1092.8" y="197" width="22.6" height="15.0" fill="rgb(245,92,41)" rx="2" ry="2" />
<text  x="1095.84" y="207.5" >r..</text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.12%)</title><rect x="1115.4" y="213" width="1.4" height="15.0" fill="rgb(219,222,1)" rx="2" ry="2" />
<text  x="1118.37" y="223.5" ></text>
</g>
<g >
<title>fmt.Fprintf (7 samples, 0.84%)</title><rect x="366.3" y="197" width="9.8" height="15.0" fill="rgb(226,131,51)" rx="2" ry="2" />
<text  x="369.25" y="207.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.12%)</title><rect x="369.1" y="101" width="1.4" height="15.0" fill="rgb(248,184,28)" rx="2" ry="2" />
<text  x="372.07" y="111.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (1 samples, 0.12%)</title><rect x="162.1" y="197" width="1.4" height="15.0" fill="rgb(244,124,23)" rx="2" ry="2" />
<text  x="165.08" y="207.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.12%)</title><rect x="360.6" y="181" width="1.4" height="15.0" fill="rgb(234,196,54)" rx="2" ry="2" />
<text  x="363.62" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.12%)</title><rect x="1167.5" y="181" width="1.4" height="15.0" fill="rgb(237,113,0)" rx="2" ry="2" />
<text  x="1170.47" y="191.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (3 samples, 0.36%)</title><rect x="359.2" y="213" width="4.2" height="15.0" fill="rgb(250,204,39)" rx="2" ry="2" />
<text  x="362.21" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.12%)</title><rect x="1057.6" y="69" width="1.4" height="15.0" fill="rgb(238,30,24)" rx="2" ry="2" />
<text  x="1060.64" y="79.5" ></text>
</g>
<g >
<title>net/http.(*conn).serve (745 samples, 88.90%)</title><rect x="10.0" y="277" width="1049.0" height="15.0" fill="rgb(239,12,19)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.12%)</title><rect x="1177.3" y="85" width="1.4" height="15.0" fill="rgb(241,123,31)" rx="2" ry="2" />
<text  x="1180.33" y="95.5" ></text>
</g>
<g >
<title>net/http.textSig.match (2 samples, 0.24%)</title><rect x="153.6" y="181" width="2.8" height="15.0" fill="rgb(222,87,44)" rx="2" ry="2" />
<text  x="156.63" y="191.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (4 samples, 0.48%)</title><rect x="142.4" y="261" width="5.6" height="15.0" fill="rgb(250,226,43)" rx="2" ry="2" />
<text  x="145.36" y="271.5" ></text>
</g>
<g >
<title>syscall.Read (27 samples, 3.22%)</title><rect x="1019.6" y="165" width="38.0" height="15.0" fill="rgb(249,136,36)" rx="2" ry="2" />
<text  x="1022.62" y="175.5" >sys..</text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (1 samples, 0.12%)</title><rect x="1177.3" y="261" width="1.4" height="15.0" fill="rgb(244,23,54)" rx="2" ry="2" />
<text  x="1180.33" y="271.5" ></text>
</g>
<g >
<title>runtime.gentraceback (2 samples, 0.24%)</title><rect x="1090.0" y="165" width="2.8" height="15.0" fill="rgb(220,156,21)" rx="2" ry="2" />
<text  x="1093.02" y="175.5" ></text>
</g>
<g >
<title>runtime.concatstrings (2 samples, 0.24%)</title><rect x="371.9" y="101" width="2.8" height="15.0" fill="rgb(235,126,14)" rx="2" ry="2" />
<text  x="374.89" y="111.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.24%)</title><rect x="1183.0" y="229" width="2.8" height="15.0" fill="rgb(220,201,36)" rx="2" ry="2" />
<text  x="1185.96" y="239.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (90 samples, 10.74%)</title><rect x="10.0" y="261" width="126.7" height="15.0" fill="rgb(212,181,20)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >bufio.(*Reader)..</text>
</g>
<g >
<title>net/http.readRequest (1 samples, 0.12%)</title><rect x="143.8" y="245" width="1.4" height="15.0" fill="rgb(223,65,13)" rx="2" ry="2" />
<text  x="146.77" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrain (1 samples, 0.12%)</title><rect x="1177.3" y="245" width="1.4" height="15.0" fill="rgb(248,168,46)" rx="2" ry="2" />
<text  x="1180.33" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.12%)</title><rect x="1115.4" y="197" width="1.4" height="15.0" fill="rgb(212,106,31)" rx="2" ry="2" />
<text  x="1118.37" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.12%)</title><rect x="1178.7" y="245" width="1.4" height="15.0" fill="rgb(219,200,32)" rx="2" ry="2" />
<text  x="1181.74" y="255.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (493 samples, 58.83%)</title><rect x="364.8" y="245" width="694.2" height="15.0" fill="rgb(218,12,42)" rx="2" ry="2" />
<text  x="367.84" y="255.5" >net/http.(*ServeMux).ServeHTTP</text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (4 samples, 0.48%)</title><rect x="359.2" y="245" width="5.6" height="15.0" fill="rgb(235,29,25)" rx="2" ry="2" />
<text  x="362.21" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.36%)</title><rect x="1088.6" y="261" width="4.2" height="15.0" fill="rgb(218,227,11)" rx="2" ry="2" />
<text  x="1091.62" y="271.5" ></text>
</g>
<g >
<title>runtime.scanstack (2 samples, 0.24%)</title><rect x="1090.0" y="181" width="2.8" height="15.0" fill="rgb(206,205,50)" rx="2" ry="2" />
<text  x="1093.02" y="191.5" ></text>
</g>
<g >
<title>main.handler (7 samples, 0.84%)</title><rect x="366.3" y="213" width="9.8" height="15.0" fill="rgb(208,218,0)" rx="2" ry="2" />
<text  x="369.25" y="223.5" ></text>
</g>
<g >
<title>sync/atomic.CompareAndSwapPointer (1 samples, 0.12%)</title><rect x="139.5" y="213" width="1.5" height="15.0" fill="rgb(221,31,27)" rx="2" ry="2" />
<text  x="142.55" y="223.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.12%)</title><rect x="143.8" y="213" width="1.4" height="15.0" fill="rgb(208,195,41)" rx="2" ry="2" />
<text  x="146.77" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Fstat.func1 (8 samples, 0.95%)</title><rect x="1008.4" y="165" width="11.2" height="15.0" fill="rgb(235,227,41)" rx="2" ry="2" />
<text  x="1011.35" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.12%)</title><rect x="141.0" y="261" width="1.4" height="15.0" fill="rgb(223,226,43)" rx="2" ry="2" />
<text  x="143.95" y="271.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (21 samples, 2.51%)</title><rect x="1059.0" y="277" width="29.6" height="15.0" fill="rgb(213,131,9)" rx="2" ry="2" />
<text  x="1062.05" y="287.5" >ne..</text>
</g>
<g >
<title>runtime.sysUsedOS (1 samples, 0.12%)</title><rect x="1177.3" y="101" width="1.4" height="15.0" fill="rgb(238,73,17)" rx="2" ry="2" />
<text  x="1180.33" y="111.5" ></text>
</g>
<g >
<title>syscall.syscall (90 samples, 10.74%)</title><rect x="10.0" y="149" width="126.7" height="15.0" fill="rgb(222,113,0)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >syscall.syscall</text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.24%)</title><rect x="1187.2" y="181" width="2.8" height="15.0" fill="rgb(246,207,41)" rx="2" ry="2" />
<text  x="1190.18" y="191.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (2 samples, 0.24%)</title><rect x="1090.0" y="149" width="2.8" height="15.0" fill="rgb(237,156,27)" rx="2" ry="2" />
<text  x="1093.02" y="159.5" ></text>
</g>
<g >
<title>syscall.syscall (17 samples, 2.03%)</title><rect x="983.0" y="85" width="23.9" height="15.0" fill="rgb(218,110,34)" rx="2" ry="2" />
<text  x="986.01" y="95.5" >s..</text>
</g>
<g >
<title>net/http.(*connReader).Read (90 samples, 10.74%)</title><rect x="10.0" y="229" width="126.7" height="15.0" fill="rgb(251,94,34)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >net/http.(*conn..</text>
</g>
<g >
<title>runtime.park_m (37 samples, 4.42%)</title><rect x="1122.4" y="261" width="52.1" height="15.0" fill="rgb(253,225,0)" rx="2" ry="2" />
<text  x="1125.41" y="271.5" >runti..</text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (3 samples, 0.36%)</title><rect x="1088.6" y="245" width="4.2" height="15.0" fill="rgb(249,224,47)" rx="2" ry="2" />
<text  x="1091.62" y="255.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (1 samples, 0.12%)</title><rect x="1121.0" y="245" width="1.4" height="15.0" fill="rgb(234,42,42)" rx="2" ry="2" />
<text  x="1124.00" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Close (17 samples, 2.03%)</title><rect x="983.0" y="149" width="23.9" height="15.0" fill="rgb(212,103,37)" rx="2" ry="2" />
<text  x="986.01" y="159.5" >i..</text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.36%)</title><rect x="1170.3" y="165" width="4.2" height="15.0" fill="rgb(232,196,20)" rx="2" ry="2" />
<text  x="1173.29" y="175.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func1 (1 samples, 0.12%)</title><rect x="1006.9" y="117" width="1.5" height="15.0" fill="rgb(247,57,38)" rx="2" ry="2" />
<text  x="1009.95" y="127.5" ></text>
</g>
<g >
<title>syscall.write (137 samples, 16.35%)</title><rect x="166.3" y="165" width="192.9" height="15.0" fill="rgb(248,219,9)" rx="2" ry="2" />
<text  x="169.30" y="175.5" >syscall.write</text>
</g>
<g >
<title>net/http.Header.WriteSubset (1 samples, 0.12%)</title><rect x="162.1" y="213" width="1.4" height="15.0" fill="rgb(237,191,27)" rx="2" ry="2" />
<text  x="165.08" y="223.5" ></text>
</g>
<g >
<title>runtime.preemptone (1 samples, 0.12%)</title><rect x="1178.7" y="213" width="1.4" height="15.0" fill="rgb(205,25,1)" rx="2" ry="2" />
<text  x="1181.74" y="223.5" ></text>
</g>
<g >
<title>time.Time.Sub (1 samples, 0.12%)</title><rect x="362.0" y="181" width="1.4" height="15.0" fill="rgb(253,213,34)" rx="2" ry="2" />
<text  x="365.03" y="191.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.12%)</title><rect x="360.6" y="149" width="1.4" height="15.0" fill="rgb(236,24,7)" rx="2" ry="2" />
<text  x="363.62" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.36%)</title><rect x="1115.4" y="245" width="4.2" height="15.0" fill="rgb(237,43,37)" rx="2" ry="2" />
<text  x="1118.37" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (17 samples, 2.03%)</title><rect x="983.0" y="133" width="23.9" height="15.0" fill="rgb(247,98,28)" rx="2" ry="2" />
<text  x="986.01" y="143.5" >i..</text>
</g>
<g >
<title>os.(*File).read (27 samples, 3.22%)</title><rect x="1019.6" y="181" width="38.0" height="15.0" fill="rgb(237,219,16)" rx="2" ry="2" />
<text  x="1022.62" y="191.5" >os...</text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (3 samples, 0.36%)</title><rect x="148.0" y="261" width="4.2" height="15.0" fill="rgb(233,37,13)" rx="2" ry="2" />
<text  x="151.00" y="271.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.12%)</title><rect x="1180.1" y="213" width="1.5" height="15.0" fill="rgb(253,221,46)" rx="2" ry="2" />
<text  x="1183.14" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).destroy (17 samples, 2.03%)</title><rect x="983.0" y="117" width="23.9" height="15.0" fill="rgb(219,19,39)" rx="2" ry="2" />
<text  x="986.01" y="127.5" >i..</text>
</g>
<g >
<title>runtime.kevent (18 samples, 2.15%)</title><rect x="1140.7" y="197" width="25.4" height="15.0" fill="rgb(250,112,2)" rx="2" ry="2" />
<text  x="1143.72" y="207.5" >r..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.12%)</title><rect x="146.6" y="245" width="1.4" height="15.0" fill="rgb(207,202,53)" rx="2" ry="2" />
<text  x="149.59" y="255.5" ></text>
</g>
<g >
<title>runtime.(*functype).out (1 samples, 0.12%)</title><rect x="439.5" y="133" width="1.4" height="15.0" fill="rgb(232,218,36)" rx="2" ry="2" />
<text  x="442.47" y="143.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.12%)</title><rect x="160.7" y="181" width="1.4" height="15.0" fill="rgb(228,186,39)" rx="2" ry="2" />
<text  x="163.67" y="191.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.12%)</title><rect x="1057.6" y="149" width="1.4" height="15.0" fill="rgb(214,5,54)" rx="2" ry="2" />
<text  x="1060.64" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.12%)</title><rect x="1180.1" y="245" width="1.5" height="15.0" fill="rgb(220,95,43)" rx="2" ry="2" />
<text  x="1183.14" y="255.5" ></text>
</g>
<g >
<title>time.Until (1 samples, 0.12%)</title><rect x="362.0" y="197" width="1.4" height="15.0" fill="rgb(233,207,3)" rx="2" ry="2" />
<text  x="365.03" y="207.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.12%)</title><rect x="1174.5" y="229" width="1.4" height="15.0" fill="rgb(206,218,17)" rx="2" ry="2" />
<text  x="1177.51" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.12%)</title><rect x="1180.1" y="197" width="1.5" height="15.0" fill="rgb(225,118,9)" rx="2" ry="2" />
<text  x="1183.14" y="207.5" ></text>
</g>
<g >
<title>runtime.goexit0 (2 samples, 0.24%)</title><rect x="1119.6" y="261" width="2.8" height="15.0" fill="rgb(253,6,45)" rx="2" ry="2" />
<text  x="1122.59" y="271.5" ></text>
</g>
<g >
<title>runtime.netpollgoready (1 samples, 0.12%)</title><rect x="360.6" y="197" width="1.4" height="15.0" fill="rgb(214,117,38)" rx="2" ry="2" />
<text  x="363.62" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.36%)</title><rect x="1170.3" y="181" width="4.2" height="15.0" fill="rgb(237,164,41)" rx="2" ry="2" />
<text  x="1173.29" y="191.5" ></text>
</g>
<g >
<title>syscall.Open (383 samples, 45.70%)</title><rect x="442.3" y="149" width="539.3" height="15.0" fill="rgb(207,23,5)" rx="2" ry="2" />
<text  x="445.29" y="159.5" >syscall.Open</text>
</g>
<g >
<title>runtime.gcBgMarkWorker (3 samples, 0.36%)</title><rect x="1088.6" y="277" width="4.2" height="15.0" fill="rgb(227,2,28)" rx="2" ry="2" />
<text  x="1091.62" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.12%)</title><rect x="1181.6" y="197" width="1.4" height="15.0" fill="rgb(213,59,52)" rx="2" ry="2" />
<text  x="1184.55" y="207.5" ></text>
</g>
<g >
<title>os.openFileNolog (430 samples, 51.31%)</title><rect x="376.1" y="165" width="605.5" height="15.0" fill="rgb(243,148,32)" rx="2" ry="2" />
<text  x="379.11" y="175.5" >os.openFileNolog</text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.12%)</title><rect x="1057.6" y="181" width="1.4" height="15.0" fill="rgb(205,113,8)" rx="2" ry="2" />
<text  x="1060.64" y="191.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.12%)</title><rect x="141.0" y="245" width="1.4" height="15.0" fill="rgb(206,29,0)" rx="2" ry="2" />
<text  x="143.95" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.24%)</title><rect x="1167.5" y="229" width="2.8" height="15.0" fill="rgb(233,197,32)" rx="2" ry="2" />
<text  x="1170.47" y="239.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (9 samples, 1.07%)</title><rect x="152.2" y="229" width="12.7" height="15.0" fill="rgb(221,168,52)" rx="2" ry="2" />
<text  x="155.22" y="239.5" ></text>
</g>
<g >
<title>runtime.injectglist (1 samples, 0.12%)</title><rect x="1122.4" y="213" width="1.4" height="15.0" fill="rgb(206,148,18)" rx="2" ry="2" />
<text  x="1125.41" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.12%)</title><rect x="1181.6" y="229" width="1.4" height="15.0" fill="rgb(252,117,27)" rx="2" ry="2" />
<text  x="1184.55" y="239.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (5 samples, 0.60%)</title><rect x="367.7" y="181" width="7.0" height="15.0" fill="rgb(213,185,20)" rx="2" ry="2" />
<text  x="370.66" y="191.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.24%)</title><rect x="1187.2" y="245" width="2.8" height="15.0" fill="rgb(212,38,34)" rx="2" ry="2" />
<text  x="1190.18" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.12%)</title><rect x="1057.6" y="101" width="1.4" height="15.0" fill="rgb(210,218,17)" rx="2" ry="2" />
<text  x="1060.64" y="111.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (1 samples, 0.12%)</title><rect x="1177.3" y="165" width="1.4" height="15.0" fill="rgb(217,97,54)" rx="2" ry="2" />
<text  x="1180.33" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.12%)</title><rect x="1180.1" y="229" width="1.5" height="15.0" fill="rgb(233,27,14)" rx="2" ry="2" />
<text  x="1183.14" y="239.5" ></text>
</g>
<g >
<title>os.newFile.func1 (45 samples, 5.37%)</title><rect x="376.1" y="149" width="63.4" height="15.0" fill="rgb(249,166,48)" rx="2" ry="2" />
<text  x="379.11" y="159.5" >os.new..</text>
</g>
<g >
<title>runtime.systemstack (11 samples, 1.31%)</title><rect x="1174.5" y="277" width="15.5" height="15.0" fill="rgb(225,45,45)" rx="2" ry="2" />
<text  x="1177.51" y="287.5" ></text>
</g>
<g >
<title>net.(*conn).Read (90 samples, 10.74%)</title><rect x="10.0" y="213" width="126.7" height="15.0" fill="rgb(217,9,30)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >net.(*conn).Read</text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.12%)</title><rect x="1119.6" y="245" width="1.4" height="15.0" fill="rgb(231,72,4)" rx="2" ry="2" />
<text  x="1122.59" y="255.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.24%)</title><rect x="1116.8" y="213" width="2.8" height="15.0" fill="rgb(211,116,53)" rx="2" ry="2" />
<text  x="1119.78" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.12%)</title><rect x="1167.5" y="213" width="1.4" height="15.0" fill="rgb(245,134,29)" rx="2" ry="2" />
<text  x="1170.47" y="223.5" ></text>
</g>
<g >
<title>net/http.Header.Get (2 samples, 0.24%)</title><rect x="159.3" y="213" width="2.8" height="15.0" fill="rgb(227,131,28)" rx="2" ry="2" />
<text  x="162.26" y="223.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (2 samples, 0.24%)</title><rect x="1090.0" y="133" width="2.8" height="15.0" fill="rgb(216,9,21)" rx="2" ry="2" />
<text  x="1093.02" y="143.5" ></text>
</g>
<g >
<title>runtime.ready (3 samples, 0.36%)</title><rect x="1181.6" y="245" width="4.2" height="15.0" fill="rgb(236,92,23)" rx="2" ry="2" />
<text  x="1184.55" y="255.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.12%)</title><rect x="374.7" y="181" width="1.4" height="15.0" fill="rgb(232,96,40)" rx="2" ry="2" />
<text  x="377.70" y="191.5" ></text>
</g>
<g >
<title>runtime.schedule (37 samples, 4.42%)</title><rect x="1122.4" y="245" width="52.1" height="15.0" fill="rgb(206,137,30)" rx="2" ry="2" />
<text  x="1125.41" y="255.5" >runti..</text>
</g>
<g >
<title>syscall.Fstat (8 samples, 0.95%)</title><rect x="1008.4" y="149" width="11.2" height="15.0" fill="rgb(235,77,18)" rx="2" ry="2" />
<text  x="1011.35" y="159.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.36%)</title><rect x="1170.3" y="197" width="4.2" height="15.0" fill="rgb(205,185,54)" rx="2" ry="2" />
<text  x="1173.29" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="360.6" y="165" width="1.4" height="15.0" fill="rgb(249,183,29)" rx="2" ry="2" />
<text  x="363.62" y="175.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.12%)</title><rect x="360.6" y="133" width="1.4" height="15.0" fill="rgb(212,146,46)" rx="2" ry="2" />
<text  x="363.62" y="143.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.12%)</title><rect x="1178.7" y="197" width="1.4" height="15.0" fill="rgb(235,210,12)" rx="2" ry="2" />
<text  x="1181.74" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (19 samples, 2.27%)</title><rect x="1140.7" y="213" width="26.8" height="15.0" fill="rgb(207,116,27)" rx="2" ry="2" />
<text  x="1143.72" y="223.5" >r..</text>
</g>
<g >
<title>runtime.(*mheap).allocManual (1 samples, 0.12%)</title><rect x="1177.3" y="117" width="1.4" height="15.0" fill="rgb(212,226,9)" rx="2" ry="2" />
<text  x="1180.33" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptall (1 samples, 0.12%)</title><rect x="1178.7" y="229" width="1.4" height="15.0" fill="rgb(246,156,35)" rx="2" ry="2" />
<text  x="1181.74" y="239.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.12%)</title><rect x="1177.3" y="197" width="1.4" height="15.0" fill="rgb(251,83,2)" rx="2" ry="2" />
<text  x="1180.33" y="207.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.12%)</title><rect x="369.1" y="117" width="1.4" height="15.0" fill="rgb(253,28,11)" rx="2" ry="2" />
<text  x="372.07" y="127.5" ></text>
</g>
<g >
<title>runtime.pthread_kill (1 samples, 0.12%)</title><rect x="1178.7" y="181" width="1.4" height="15.0" fill="rgb(221,121,15)" rx="2" ry="2" />
<text  x="1181.74" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.12%)</title><rect x="148.0" y="213" width="1.4" height="15.0" fill="rgb(245,205,32)" rx="2" ry="2" />
<text  x="151.00" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.12%)</title><rect x="141.0" y="213" width="1.4" height="15.0" fill="rgb(247,179,7)" rx="2" ry="2" />
<text  x="143.95" y="223.5" ></text>
</g>
<g >
<title>syscall.Read (21 samples, 2.51%)</title><rect x="1059.0" y="229" width="29.6" height="15.0" fill="rgb(215,228,52)" rx="2" ry="2" />
<text  x="1062.05" y="239.5" >sy..</text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.12%)</title><rect x="141.0" y="229" width="1.4" height="15.0" fill="rgb(249,30,0)" rx="2" ry="2" />
<text  x="143.95" y="239.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (3 samples, 0.36%)</title><rect x="136.7" y="261" width="4.3" height="15.0" fill="rgb(233,84,48)" rx="2" ry="2" />
<text  x="139.73" y="271.5" ></text>
</g>
<g >
<title>syscall.Write (137 samples, 16.35%)</title><rect x="166.3" y="181" width="192.9" height="15.0" fill="rgb(245,229,6)" rx="2" ry="2" />
<text  x="169.30" y="191.5" >syscall.Write</text>
</g>
<g >
<title>os.syscallMode (1 samples, 0.12%)</title><rect x="981.6" y="165" width="1.4" height="15.0" fill="rgb(233,71,53)" rx="2" ry="2" />
<text  x="984.60" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.12%)</title><rect x="1174.5" y="261" width="1.4" height="15.0" fill="rgb(240,120,34)" rx="2" ry="2" />
<text  x="1177.51" y="271.5" ></text>
</g>
<g >
<title>net/http.DetectContentType (3 samples, 0.36%)</title><rect x="152.2" y="197" width="4.2" height="15.0" fill="rgb(223,123,39)" rx="2" ry="2" />
<text  x="155.22" y="207.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.12%)</title><rect x="1185.8" y="245" width="1.4" height="15.0" fill="rgb(220,100,50)" rx="2" ry="2" />
<text  x="1188.78" y="255.5" ></text>
</g>
<g >
<title>time.absClock (1 samples, 0.12%)</title><rect x="156.4" y="181" width="1.5" height="15.0" fill="rgb(237,214,51)" rx="2" ry="2" />
<text  x="159.44" y="191.5" ></text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (493 samples, 58.83%)</title><rect x="364.8" y="229" width="694.2" height="15.0" fill="rgb(253,70,24)" rx="2" ry="2" />
<text  x="367.84" y="239.5" >net/http.HandlerFunc.ServeHTTP</text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.12%)</title><rect x="1177.3" y="229" width="1.4" height="15.0" fill="rgb(239,97,26)" rx="2" ry="2" />
<text  x="1180.33" y="239.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (1 samples, 0.12%)</title><rect x="1175.9" y="245" width="1.4" height="15.0" fill="rgb(211,78,36)" rx="2" ry="2" />
<text  x="1178.92" y="255.5" ></text>
</g>
<g >
<title>runtime.mPark (16 samples, 1.91%)</title><rect x="1092.8" y="245" width="22.6" height="15.0" fill="rgb(212,24,23)" rx="2" ry="2" />
<text  x="1095.84" y="255.5" >r..</text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.12%)</title><rect x="1091.4" y="85" width="1.4" height="15.0" fill="rgb(213,170,50)" rx="2" ry="2" />
<text  x="1094.43" y="95.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (3 samples, 0.36%)</title><rect x="136.7" y="245" width="4.3" height="15.0" fill="rgb(245,33,12)" rx="2" ry="2" />
<text  x="139.73" y="255.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.12%)</title><rect x="162.1" y="181" width="1.4" height="15.0" fill="rgb(240,111,53)" rx="2" ry="2" />
<text  x="165.08" y="191.5" ></text>
</g>
<g >
<title>runtime.concatstring2 (2 samples, 0.24%)</title><rect x="371.9" y="117" width="2.8" height="15.0" fill="rgb(236,42,12)" rx="2" ry="2" />
<text  x="374.89" y="127.5" ></text>
</g>
<g >
<title>syscall.Close (17 samples, 2.03%)</title><rect x="983.0" y="101" width="23.9" height="15.0" fill="rgb(242,100,1)" rx="2" ry="2" />
<text  x="986.01" y="111.5" >s..</text>
</g>
<g >
<title>net/http.(*response).finishRequest (151 samples, 18.02%)</title><rect x="152.2" y="261" width="212.6" height="15.0" fill="rgb(226,46,24)" rx="2" ry="2" />
<text  x="155.22" y="271.5" >net/http.(*response).finishR..</text>
</g>
<g >
<title>net.(*conn).Write (138 samples, 16.47%)</title><rect x="164.9" y="213" width="194.3" height="15.0" fill="rgb(240,189,19)" rx="2" ry="2" />
<text  x="167.89" y="223.5" >net.(*conn).Write</text>
</g>
<g >
<title>context.withCancel (1 samples, 0.12%)</title><rect x="142.4" y="229" width="1.4" height="15.0" fill="rgb(239,57,49)" rx="2" ry="2" />
<text  x="145.36" y="239.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.12%)</title><rect x="1168.9" y="213" width="1.4" height="15.0" fill="rgb(212,35,14)" rx="2" ry="2" />
<text  x="1171.88" y="223.5" ></text>
</g>
<g >
<title>syscall.syscall (383 samples, 45.70%)</title><rect x="442.3" y="133" width="539.3" height="15.0" fill="rgb(246,56,33)" rx="2" ry="2" />
<text  x="445.29" y="143.5" >syscall.syscall</text>
</g>
<g >
<title>runtime.getempty.func1 (1 samples, 0.12%)</title><rect x="1177.3" y="133" width="1.4" height="15.0" fill="rgb(218,80,52)" rx="2" ry="2" />
<text  x="1180.33" y="143.5" ></text>
</g>
<g >
<title>syscall.read (27 samples, 3.22%)</title><rect x="1019.6" y="149" width="38.0" height="15.0" fill="rgb(253,8,41)" rx="2" ry="2" />
<text  x="1022.62" y="159.5" >sys..</text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.12%)</title><rect x="1177.3" y="149" width="1.4" height="15.0" fill="rgb(239,116,46)" rx="2" ry="2" />
<text  x="1180.33" y="159.5" ></text>
</g>
<g >
<title>runtime.notesleep (11 samples, 1.31%)</title><rect x="1125.2" y="197" width="15.5" height="15.0" fill="rgb(239,117,37)" rx="2" ry="2" />
<text  x="1128.23" y="207.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.24%)</title><rect x="1183.0" y="213" width="2.8" height="15.0" fill="rgb(241,78,40)" rx="2" ry="2" />
<text  x="1185.96" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="1006.9" y="133" width="1.5" height="15.0" fill="rgb(214,192,46)" rx="2" ry="2" />
<text  x="1009.95" y="143.5" ></text>
</g>
<g >
<title>context.propagateCancel (1 samples, 0.12%)</title><rect x="142.4" y="213" width="1.4" height="15.0" fill="rgb(233,102,10)" rx="2" ry="2" />
<text  x="145.36" y="223.5" ></text>
</g>
<g >
<title>os.(*File).Close (18 samples, 2.15%)</title><rect x="983.0" y="181" width="25.4" height="15.0" fill="rgb(209,80,16)" rx="2" ry="2" />
<text  x="986.01" y="191.5" >o..</text>
</g>
<g >
<title>net/textproto.readMIMEHeader (1 samples, 0.12%)</title><rect x="145.2" y="229" width="1.4" height="15.0" fill="rgb(227,191,36)" rx="2" ry="2" />
<text  x="148.18" y="239.5" ></text>
</g>
<g >
<title>time.Time.Add (1 samples, 0.12%)</title><rect x="362.0" y="165" width="1.4" height="15.0" fill="rgb(224,14,47)" rx="2" ry="2" />
<text  x="365.03" y="175.5" ></text>
</g>
<g >
<title>context.WithCancel (1 samples, 0.12%)</title><rect x="142.4" y="245" width="1.4" height="15.0" fill="rgb(245,132,19)" rx="2" ry="2" />
<text  x="145.36" y="255.5" ></text>
</g>
<g >
<title>runtime.kevent (2 samples, 0.24%)</title><rect x="1116.8" y="197" width="2.8" height="15.0" fill="rgb(254,32,42)" rx="2" ry="2" />
<text  x="1119.78" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.12%)</title><rect x="1180.1" y="261" width="1.5" height="15.0" fill="rgb(253,123,35)" rx="2" ry="2" />
<text  x="1183.14" y="271.5" ></text>
</g>
<g >
<title>net/http.writeStatusLine (1 samples, 0.12%)</title><rect x="157.9" y="197" width="1.4" height="15.0" fill="rgb(230,110,38)" rx="2" ry="2" />
<text  x="160.85" y="207.5" ></text>
</g>
<g >
<title>runtime.findRunnable (32 samples, 3.82%)</title><rect x="1122.4" y="229" width="45.1" height="15.0" fill="rgb(222,202,14)" rx="2" ry="2" />
<text  x="1125.41" y="239.5" >runt..</text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.12%)</title><rect x="1057.6" y="37" width="1.4" height="15.0" fill="rgb(210,168,28)" rx="2" ry="2" />
<text  x="1060.64" y="47.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (1 samples, 0.12%)</title><rect x="1091.4" y="101" width="1.4" height="15.0" fill="rgb(210,98,18)" rx="2" ry="2" />
<text  x="1094.43" y="111.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.12%)</title><rect x="162.1" y="165" width="1.4" height="15.0" fill="rgb(218,51,15)" rx="2" ry="2" />
<text  x="165.08" y="175.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.12%)</title><rect x="1175.9" y="229" width="1.4" height="15.0" fill="rgb(251,221,23)" rx="2" ry="2" />
<text  x="1178.92" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.12%)</title><rect x="1123.8" y="213" width="1.4" height="15.0" fill="rgb(217,79,53)" rx="2" ry="2" />
<text  x="1126.82" y="223.5" ></text>
</g>
<g >
<title>syscall.syscall (21 samples, 2.51%)</title><rect x="1059.0" y="197" width="29.6" height="15.0" fill="rgb(211,117,19)" rx="2" ry="2" />
<text  x="1062.05" y="207.5" >sy..</text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.12%)</title><rect x="1185.8" y="229" width="1.4" height="15.0" fill="rgb(247,205,13)" rx="2" ry="2" />
<text  x="1188.78" y="239.5" ></text>
</g>
<g >
<title>runtime.gostartcallfn (1 samples, 0.12%)</title><rect x="150.8" y="181" width="1.4" height="15.0" fill="rgb(210,86,29)" rx="2" ry="2" />
<text  x="153.81" y="191.5" ></text>
</g>
<g >
<title>runtime.mPark (11 samples, 1.31%)</title><rect x="1125.2" y="213" width="15.5" height="15.0" fill="rgb(231,1,19)" rx="2" ry="2" />
<text  x="1128.23" y="223.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (4 samples, 0.48%)</title><rect x="369.1" y="149" width="5.6" height="15.0" fill="rgb(243,43,36)" rx="2" ry="2" />
<text  x="372.07" y="159.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Get (2 samples, 0.24%)</title><rect x="159.3" y="197" width="2.8" height="15.0" fill="rgb(239,0,6)" rx="2" ry="2" />
<text  x="162.26" y="207.5" ></text>
</g>
<g >
<title>all (838 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(243,62,7)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (2 samples, 0.24%)</title><rect x="1187.2" y="261" width="2.8" height="15.0" fill="rgb(205,40,46)" rx="2" ry="2" />
<text  x="1190.18" y="271.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (1 samples, 0.12%)</title><rect x="359.2" y="197" width="1.4" height="15.0" fill="rgb(227,54,38)" rx="2" ry="2" />
<text  x="362.21" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.12%)</title><rect x="1057.6" y="165" width="1.4" height="15.0" fill="rgb(247,138,44)" rx="2" ry="2" />
<text  x="1060.64" y="175.5" ></text>
</g>
<g >
<title>syscall.BytePtrFromString (1 samples, 0.12%)</title><rect x="440.9" y="149" width="1.4" height="15.0" fill="rgb(220,30,6)" rx="2" ry="2" />
<text  x="443.88" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.24%)</title><rect x="1183.0" y="181" width="2.8" height="15.0" fill="rgb(229,7,33)" rx="2" ry="2" />
<text  x="1185.96" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.12%)</title><rect x="1185.8" y="261" width="1.4" height="15.0" fill="rgb(253,107,20)" rx="2" ry="2" />
<text  x="1188.78" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.24%)</title><rect x="149.4" y="229" width="2.8" height="15.0" fill="rgb(240,177,41)" rx="2" ry="2" />
<text  x="152.40" y="239.5" ></text>
</g>
<g >
<title>syscall.read (21 samples, 2.51%)</title><rect x="1059.0" y="213" width="29.6" height="15.0" fill="rgb(245,225,37)" rx="2" ry="2" />
<text  x="1062.05" y="223.5" >sy..</text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.12%)</title><rect x="1123.8" y="181" width="1.4" height="15.0" fill="rgb(239,102,5)" rx="2" ry="2" />
<text  x="1126.82" y="191.5" ></text>
</g>
<g >
<title>syscall.ByteSliceFromString (1 samples, 0.12%)</title><rect x="440.9" y="133" width="1.4" height="15.0" fill="rgb(235,84,50)" rx="2" ry="2" />
<text  x="443.88" y="143.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.12%)</title><rect x="1177.3" y="181" width="1.4" height="15.0" fill="rgb(219,64,6)" rx="2" ry="2" />
<text  x="1180.33" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.24%)</title><rect x="1183.0" y="197" width="2.8" height="15.0" fill="rgb(235,31,54)" rx="2" ry="2" />
<text  x="1185.96" y="207.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (147 samples, 17.54%)</title><rect x="152.2" y="245" width="207.0" height="15.0" fill="rgb(212,114,0)" rx="2" ry="2" />
<text  x="155.22" y="255.5" >bufio.(*Writer).Flush</text>
</g>
<g >
<title>syscall.syscall (27 samples, 3.22%)</title><rect x="1019.6" y="133" width="38.0" height="15.0" fill="rgb(230,107,32)" rx="2" ry="2" />
<text  x="1022.62" y="143.5" >sys..</text>
</g>
<g >
<title>runtime.markroot (2 samples, 0.24%)</title><rect x="1090.0" y="213" width="2.8" height="15.0" fill="rgb(226,43,18)" rx="2" ry="2" />
<text  x="1093.02" y="223.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (1 samples, 0.12%)</title><rect x="369.1" y="133" width="1.4" height="15.0" fill="rgb(243,127,30)" rx="2" ry="2" />
<text  x="372.07" y="143.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (1 samples, 0.12%)</title><rect x="1006.9" y="149" width="1.5" height="15.0" fill="rgb(241,200,26)" rx="2" ry="2" />
<text  x="1009.95" y="159.5" ></text>
</g>
<g >
<title>net/textproto.CanonicalMIMEHeaderKey (1 samples, 0.12%)</title><rect x="159.3" y="181" width="1.4" height="15.0" fill="rgb(229,9,49)" rx="2" ry="2" />
<text  x="162.26" y="191.5" ></text>
</g>
<g >
<title>os.OpenFile (431 samples, 51.43%)</title><rect x="376.1" y="181" width="606.9" height="15.0" fill="rgb(205,185,0)" rx="2" ry="2" />
<text  x="379.11" y="191.5" >os.OpenFile</text>
</g>
<g >
<title>runtime.selectnbrecv (1 samples, 0.12%)</title><rect x="142.4" y="197" width="1.4" height="15.0" fill="rgb(214,193,30)" rx="2" ry="2" />
<text  x="145.36" y="207.5" ></text>
</g>
<g >
<title>syscall.Fstat (45 samples, 5.37%)</title><rect x="376.1" y="133" width="63.4" height="15.0" fill="rgb(212,23,9)" rx="2" ry="2" />
<text  x="379.11" y="143.5" >syscal..</text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.24%)</title><rect x="1090.0" y="117" width="2.8" height="15.0" fill="rgb(209,212,50)" rx="2" ry="2" />
<text  x="1093.02" y="127.5" ></text>
</g>
<g >
<title>runtime.procUnpin (1 samples, 0.12%)</title><rect x="138.1" y="213" width="1.4" height="15.0" fill="rgb(213,73,23)" rx="2" ry="2" />
<text  x="141.14" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBits.nextFast (1 samples, 0.12%)</title><rect x="1088.6" y="213" width="1.4" height="15.0" fill="rgb(235,156,10)" rx="2" ry="2" />
<text  x="1091.62" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.12%)</title><rect x="1115.4" y="165" width="1.4" height="15.0" fill="rgb(243,2,4)" rx="2" ry="2" />
<text  x="1118.37" y="175.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.12%)</title><rect x="1181.6" y="213" width="1.4" height="15.0" fill="rgb(250,117,28)" rx="2" ry="2" />
<text  x="1184.55" y="223.5" ></text>
</g>
<g >
<title>os.(*File).Stat (8 samples, 0.95%)</title><rect x="1008.4" y="181" width="11.2" height="15.0" fill="rgb(249,181,8)" rx="2" ry="2" />
<text  x="1011.35" y="191.5" ></text>
</g>
<g >
<title>time.Time.String (3 samples, 0.36%)</title><rect x="370.5" y="133" width="4.2" height="15.0" fill="rgb(222,140,17)" rx="2" ry="2" />
<text  x="373.48" y="143.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (2 samples, 0.24%)</title><rect x="1090.0" y="197" width="2.8" height="15.0" fill="rgb(241,113,16)" rx="2" ry="2" />
<text  x="1093.02" y="207.5" ></text>
</g>
<g >
<title>runtime.sysUsedOS (1 samples, 0.12%)</title><rect x="1174.5" y="245" width="1.4" height="15.0" fill="rgb(225,189,53)" rx="2" ry="2" />
<text  x="1177.51" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.12%)</title><rect x="148.0" y="197" width="1.4" height="15.0" fill="rgb(245,137,23)" rx="2" ry="2" />
<text  x="151.00" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (16 samples, 1.91%)</title><rect x="1092.8" y="229" width="22.6" height="15.0" fill="rgb(244,197,23)" rx="2" ry="2" />
<text  x="1095.84" y="239.5" >r..</text>
</g>
<g >
<title>runtime.netpollready (1 samples, 0.12%)</title><rect x="1166.1" y="197" width="1.4" height="15.0" fill="rgb(216,117,53)" rx="2" ry="2" />
<text  x="1169.06" y="207.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (5 samples, 0.60%)</title><rect x="152.2" y="213" width="7.1" height="15.0" fill="rgb(239,110,52)" rx="2" ry="2" />
<text  x="155.22" y="223.5" ></text>
</g>
<g >
<title>sync.(*Cond).Wait (1 samples, 0.12%)</title><rect x="363.4" y="229" width="1.4" height="15.0" fill="rgb(231,128,23)" rx="2" ry="2" />
<text  x="366.44" y="239.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (138 samples, 16.47%)</title><rect x="164.9" y="197" width="194.3" height="15.0" fill="rgb(248,207,11)" rx="2" ry="2" />
<text  x="167.89" y="207.5" >net.(*netFD).Write</text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.24%)</title><rect x="1187.2" y="197" width="2.8" height="15.0" fill="rgb(208,145,54)" rx="2" ry="2" />
<text  x="1190.18" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (11 samples, 1.31%)</title><rect x="1125.2" y="165" width="15.5" height="15.0" fill="rgb(239,82,11)" rx="2" ry="2" />
<text  x="1128.23" y="175.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (2 samples, 0.24%)</title><rect x="149.4" y="213" width="2.8" height="15.0" fill="rgb(206,74,10)" rx="2" ry="2" />
<text  x="152.40" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.12%)</title><rect x="1057.6" y="133" width="1.4" height="15.0" fill="rgb(205,140,48)" rx="2" ry="2" />
<text  x="1060.64" y="143.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.12%)</title><rect x="143.8" y="197" width="1.4" height="15.0" fill="rgb(252,123,25)" rx="2" ry="2" />
<text  x="146.77" y="207.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.12%)</title><rect x="1057.6" y="53" width="1.4" height="15.0" fill="rgb(210,27,5)" rx="2" ry="2" />
<text  x="1060.64" y="63.5" ></text>
</g>
<g >
<title>runtime.newproc1 (1 samples, 0.12%)</title><rect x="150.8" y="197" width="1.4" height="15.0" fill="rgb(247,205,21)" rx="2" ry="2" />
<text  x="153.81" y="207.5" ></text>
</g>
<g >
<title>runtime.newproc (2 samples, 0.24%)</title><rect x="149.4" y="245" width="2.8" height="15.0" fill="rgb(230,9,37)" rx="2" ry="2" />
<text  x="152.40" y="255.5" ></text>
</g>
<g >
<title>net.(*conn).Read (21 samples, 2.51%)</title><rect x="1059.0" y="261" width="29.6" height="15.0" fill="rgb(222,191,29)" rx="2" ry="2" />
<text  x="1062.05" y="271.5" >ne..</text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.12%)</title><rect x="148.0" y="245" width="1.4" height="15.0" fill="rgb(245,203,6)" rx="2" ry="2" />
<text  x="151.00" y="255.5" ></text>
</g>
<g >
<title>os.(*file).close (18 samples, 2.15%)</title><rect x="983.0" y="165" width="25.4" height="15.0" fill="rgb(215,103,2)" rx="2" ry="2" />
<text  x="986.01" y="175.5" >o..</text>
</g>
<g >
<title>bufio.(*Reader).fill (90 samples, 10.74%)</title><rect x="10.0" y="245" width="126.7" height="15.0" fill="rgb(224,162,32)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >bufio.(*Reader)..</text>
</g>
<g >
<title>sync/atomic.(*Value).Store (2 samples, 0.24%)</title><rect x="138.1" y="229" width="2.9" height="15.0" fill="rgb(243,65,3)" rx="2" ry="2" />
<text  x="141.14" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (11 samples, 1.31%)</title><rect x="1125.2" y="181" width="15.5" height="15.0" fill="rgb(214,122,4)" rx="2" ry="2" />
<text  x="1128.23" y="191.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.12%)</title><rect x="157.9" y="181" width="1.4" height="15.0" fill="rgb(240,165,10)" rx="2" ry="2" />
<text  x="160.85" y="191.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.36%)</title><rect x="1170.3" y="213" width="4.2" height="15.0" fill="rgb(246,16,44)" rx="2" ry="2" />
<text  x="1173.29" y="223.5" ></text>
</g>
<g >
<title>net/http.Header.get (1 samples, 0.12%)</title><rect x="163.5" y="213" width="1.4" height="15.0" fill="rgb(251,88,39)" rx="2" ry="2" />
<text  x="166.48" y="223.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.24%)</title><rect x="1187.2" y="229" width="2.8" height="15.0" fill="rgb(212,203,14)" rx="2" ry="2" />
<text  x="1190.18" y="239.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (1 samples, 0.12%)</title><rect x="145.2" y="245" width="1.4" height="15.0" fill="rgb(218,149,23)" rx="2" ry="2" />
<text  x="148.18" y="255.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (21 samples, 2.51%)</title><rect x="1059.0" y="245" width="29.6" height="15.0" fill="rgb(215,46,2)" rx="2" ry="2" />
<text  x="1062.05" y="255.5" >ne..</text>
</g>
<g >
<title>main.readFile (485 samples, 57.88%)</title><rect x="376.1" y="213" width="682.9" height="15.0" fill="rgb(232,1,29)" rx="2" ry="2" />
<text  x="379.11" y="223.5" >main.readFile</text>
</g>
<g >
<title>syscall.syscall (8 samples, 0.95%)</title><rect x="1008.4" y="133" width="11.2" height="15.0" fill="rgb(237,195,11)" rx="2" ry="2" />
<text  x="1011.35" y="143.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (90 samples, 10.74%)</title><rect x="10.0" y="197" width="126.7" height="15.0" fill="rgb(219,11,33)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >net.(*netFD).Read</text>
</g>
<g >
<title>runtime.exitsyscall0 (19 samples, 2.27%)</title><rect x="1092.8" y="261" width="26.8" height="15.0" fill="rgb(241,143,14)" rx="2" ry="2" />
<text  x="1095.84" y="271.5" >r..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.12%)</title><rect x="1057.6" y="117" width="1.4" height="15.0" fill="rgb(246,107,34)" rx="2" ry="2" />
<text  x="1060.64" y="127.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.12%)</title><rect x="1167.5" y="197" width="1.4" height="15.0" fill="rgb(226,78,41)" rx="2" ry="2" />
<text  x="1170.47" y="207.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.12%)</title><rect x="1123.8" y="197" width="1.4" height="15.0" fill="rgb(233,124,7)" rx="2" ry="2" />
<text  x="1126.82" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (3 samples, 0.36%)</title><rect x="359.2" y="229" width="4.2" height="15.0" fill="rgb(231,170,14)" rx="2" ry="2" />
<text  x="362.21" y="239.5" ></text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.36%)</title><rect x="1170.3" y="229" width="4.2" height="15.0" fill="rgb(235,52,41)" rx="2" ry="2" />
<text  x="1173.29" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (16 samples, 1.91%)</title><rect x="1092.8" y="213" width="22.6" height="15.0" fill="rgb(205,122,0)" rx="2" ry="2" />
<text  x="1095.84" y="223.5" >r..</text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.24%)</title><rect x="1187.2" y="213" width="2.8" height="15.0" fill="rgb(213,228,6)" rx="2" ry="2" />
<text  x="1190.18" y="223.5" ></text>
</g>
<g >
<title>net/http.putTextprotoReader (1 samples, 0.12%)</title><rect x="143.8" y="229" width="1.4" height="15.0" fill="rgb(226,181,17)" rx="2" ry="2" />
<text  x="146.77" y="239.5" ></text>
</g>
<g >
<title>syscall.syscall (137 samples, 16.35%)</title><rect x="166.3" y="149" width="192.9" height="15.0" fill="rgb(206,180,14)" rx="2" ry="2" />
<text  x="169.30" y="159.5" >syscall.syscall</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.12%)</title><rect x="146.6" y="213" width="1.4" height="15.0" fill="rgb(249,51,33)" rx="2" ry="2" />
<text  x="149.59" y="223.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (493 samples, 58.83%)</title><rect x="364.8" y="261" width="694.2" height="15.0" fill="rgb(241,168,37)" rx="2" ry="2" />
<text  x="367.84" y="271.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.36%)</title><rect x="1170.3" y="149" width="4.2" height="15.0" fill="rgb(220,80,42)" rx="2" ry="2" />
<text  x="1173.29" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.24%)</title><rect x="1183.0" y="165" width="2.8" height="15.0" fill="rgb(212,130,49)" rx="2" ry="2" />
<text  x="1185.96" y="175.5" ></text>
</g>
<g >
<title>runtime.mcall (58 samples, 6.92%)</title><rect x="1092.8" y="277" width="81.7" height="15.0" fill="rgb(242,210,21)" rx="2" ry="2" />
<text  x="1095.84" y="287.5" >runtime.m..</text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.12%)</title><rect x="363.4" y="213" width="1.4" height="15.0" fill="rgb(214,85,38)" rx="2" ry="2" />
<text  x="366.44" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.12%)</title><rect x="1122.4" y="165" width="1.4" height="15.0" fill="rgb(213,175,38)" rx="2" ry="2" />
<text  x="1125.41" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (1 samples, 0.12%)</title><rect x="1175.9" y="261" width="1.4" height="15.0" fill="rgb(235,113,34)" rx="2" ry="2" />
<text  x="1178.92" y="271.5" ></text>
</g>
<g >
<title>context.removeChild (1 samples, 0.12%)</title><rect x="136.7" y="229" width="1.4" height="15.0" fill="rgb(244,24,47)" rx="2" ry="2" />
<text  x="139.73" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.12%)</title><rect x="1115.4" y="181" width="1.4" height="15.0" fill="rgb(236,219,10)" rx="2" ry="2" />
<text  x="1118.37" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrain (3 samples, 0.36%)</title><rect x="1088.6" y="229" width="4.2" height="15.0" fill="rgb(238,4,19)" rx="2" ry="2" />
<text  x="1091.62" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).CompareAndSwap (1 samples, 0.12%)</title><rect x="360.6" y="117" width="1.4" height="15.0" fill="rgb(213,209,10)" rx="2" ry="2" />
<text  x="363.62" y="127.5" ></text>
</g>
</g>
</svg>
